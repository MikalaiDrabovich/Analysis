node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "loss_scale/initial_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 128.0
      }
    }
  }
}
node {
  name: "loss_scale"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "loss_scale/Assign"
  op: "Assign"
  input: "loss_scale"
  input: "loss_scale/initial_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_scale"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "loss_scale/read"
  op: "Identity"
  input: "loss_scale"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_scale"
      }
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_inputs/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\343\000\000\000\343\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_inputs/mean"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_HALF
        tensor_shape {
        }
        half_val: 22512
      }
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_inputs/stddev"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_HALF
        tensor_shape {
        }
        half_val: 21376
      }
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_inputs/TruncatedNormal"
  op: "TruncatedNormal"
  input: "tower_0/v/alexnet_synthetic_inputs/shape"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 12
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_inputs/mul"
  op: "Mul"
  input: "tower_0/v/alexnet_synthetic_inputs/TruncatedNormal"
  input: "tower_0/v/alexnet_synthetic_inputs/stddev"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_inputs"
  op: "Add"
  input: "tower_0/v/alexnet_synthetic_inputs/mul"
  input: "tower_0/v/alexnet_synthetic_inputs/mean"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gpu_cached_inputs"
  op: "VariableV2"
  device: "/device:GPU:0"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 227
        }
        dim {
          size: 227
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower_0/v/gpu_cached_inputs/Assign"
  op: "Assign"
  input: "tower_0/v/gpu_cached_inputs"
  input: "tower_0/v/alexnet_synthetic_inputs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gpu_cached_inputs"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gpu_cached_inputs/read"
  op: "Identity"
  input: "tower_0/v/gpu_cached_inputs"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gpu_cached_inputs"
      }
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_labels/shape"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_labels/min"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_labels/max"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "tower_0/v/alexnet_synthetic_labels"
  op: "RandomUniformInt"
  input: "tower_0/v/alexnet_synthetic_labels/shape"
  input: "tower_0/v/alexnet_synthetic_labels/min"
  input: "tower_0/v/alexnet_synthetic_labels/max"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 21
    }
  }
}
node {
  name: "tower_0/v/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "tower_0/v/Reshape"
  op: "Reshape"
  input: "tower_0/v/alexnet_synthetic_labels"
  input: "tower_0/v/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\013\000\000\000\013\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02720480039715767
      }
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02720480039715767
      }
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 27
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/max"
  input: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/mul"
  input: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 11
        }
        dim {
          size: 11
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel/Assign"
  op: "Assign"
  input: "v/cg/conv0/conv2d/kernel"
  input: "v/cg/conv0/conv2d/kernel/Initializer/random_uniform"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv0/conv2d/kernel/read"
  op: "Identity"
  input: "v/cg/conv0/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "v/cg/conv0/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv0/conv2d/dilation_rate"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv0/conv2d/Conv2D"
  op: "Conv2D"
  input: "tower_0/v/gpu_cached_inputs/read"
  input: "Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv0/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/conv0/biases"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv0/biases/Assign"
  op: "Assign"
  input: "v/cg/conv0/biases"
  input: "v/cg/conv0/biases/Initializer/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv0/biases/read"
  op: "Identity"
  input: "v/cg/conv0/biases"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/biases"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv0/Cast"
  op: "Cast"
  input: "v/cg/conv0/biases/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv0/BiasAdd"
  op: "BiasAdd"
  input: "tower_0/v/cg/conv0/conv2d/Conv2D"
  input: "tower_0/v/cg/conv0/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/cg/conv0/Reshape/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\0007\000\000\0007\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv0/Reshape"
  op: "Reshape"
  input: "tower_0/v/cg/conv0/BiasAdd"
  input: "tower_0/v/cg/conv0/Reshape/shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/cg/conv0/Relu"
  op: "Relu"
  input: "tower_0/v/cg/conv0/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/mpool0/MaxPool"
  op: "MaxPool"
  input: "tower_0/v/cg/conv0/Relu"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03061862103641033
      }
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03061862103641033
      }
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 50
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/max"
  input: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/mul"
  input: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel/Assign"
  op: "Assign"
  input: "v/cg/conv1/conv2d/kernel"
  input: "v/cg/conv1/conv2d/kernel/Initializer/random_uniform"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv1/conv2d/kernel/read"
  op: "Identity"
  input: "v/cg/conv1/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "v/cg/conv1/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv1/conv2d/dilation_rate"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv1/conv2d/Conv2D"
  op: "Conv2D"
  input: "tower_0/v/cg/mpool0/MaxPool"
  input: "Cast_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv1/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/conv1/biases"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv1/biases/Assign"
  op: "Assign"
  input: "v/cg/conv1/biases"
  input: "v/cg/conv1/biases/Initializer/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv1/biases/read"
  op: "Identity"
  input: "v/cg/conv1/biases"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/biases"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv1/Cast"
  op: "Cast"
  input: "v/cg/conv1/biases/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv1/BiasAdd"
  op: "BiasAdd"
  input: "tower_0/v/cg/conv1/conv2d/Conv2D"
  input: "tower_0/v/cg/conv1/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/cg/conv1/Reshape/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\033\000\000\000\033\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv1/Reshape"
  op: "Reshape"
  input: "tower_0/v/cg/conv1/BiasAdd"
  input: "tower_0/v/cg/conv1/Reshape/shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/cg/conv1/Relu"
  op: "Relu"
  input: "tower_0/v/cg/conv1/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/mpool1/MaxPool"
  op: "MaxPool"
  input: "tower_0/v/cg/conv1/Relu"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.034020692110061646
      }
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.034020692110061646
      }
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 73
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/max"
  input: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/mul"
  input: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel/Assign"
  op: "Assign"
  input: "v/cg/conv2/conv2d/kernel"
  input: "v/cg/conv2/conv2d/kernel/Initializer/random_uniform"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv2/conv2d/kernel/read"
  op: "Identity"
  input: "v/cg/conv2/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
}
node {
  name: "Cast_2"
  op: "Cast"
  input: "v/cg/conv2/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv2/conv2d/dilation_rate"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv2/conv2d/Conv2D"
  op: "Conv2D"
  input: "tower_0/v/cg/mpool1/MaxPool"
  input: "Cast_2"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv2/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/conv2/biases"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv2/biases/Assign"
  op: "Assign"
  input: "v/cg/conv2/biases"
  input: "v/cg/conv2/biases/Initializer/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv2/biases/read"
  op: "Identity"
  input: "v/cg/conv2/biases"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/biases"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv2/Cast"
  op: "Cast"
  input: "v/cg/conv2/biases/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv2/BiasAdd"
  op: "BiasAdd"
  input: "tower_0/v/cg/conv2/conv2d/Conv2D"
  input: "tower_0/v/cg/conv2/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/cg/conv2/Reshape/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\r\000\000\000\r\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv2/Reshape"
  op: "Reshape"
  input: "tower_0/v/cg/conv2/BiasAdd"
  input: "tower_0/v/cg/conv2/Reshape/shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/cg/conv2/Relu"
  op: "Relu"
  input: "tower_0/v/cg/conv2/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.02946278266608715
      }
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.02946278266608715
      }
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 95
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/max"
  input: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/mul"
  input: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel/Assign"
  op: "Assign"
  input: "v/cg/conv3/conv2d/kernel"
  input: "v/cg/conv3/conv2d/kernel/Initializer/random_uniform"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv3/conv2d/kernel/read"
  op: "Identity"
  input: "v/cg/conv3/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
}
node {
  name: "Cast_3"
  op: "Cast"
  input: "v/cg/conv3/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv3/conv2d/dilation_rate"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv3/conv2d/Conv2D"
  op: "Conv2D"
  input: "tower_0/v/cg/conv2/Relu"
  input: "Cast_3"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv3/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/conv3/biases"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv3/biases/Assign"
  op: "Assign"
  input: "v/cg/conv3/biases"
  input: "v/cg/conv3/biases/Initializer/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv3/biases/read"
  op: "Identity"
  input: "v/cg/conv3/biases"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/biases"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv3/Cast"
  op: "Cast"
  input: "v/cg/conv3/biases/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv3/BiasAdd"
  op: "BiasAdd"
  input: "tower_0/v/cg/conv3/conv2d/Conv2D"
  input: "tower_0/v/cg/conv3/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/cg/conv3/Reshape/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\r\000\000\000\r\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv3/Reshape"
  op: "Reshape"
  input: "tower_0/v/cg/conv3/BiasAdd"
  input: "tower_0/v/cg/conv3/Reshape/shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/cg/conv3/Relu"
  op: "Relu"
  input: "tower_0/v/cg/conv3/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03227486088871956
      }
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03227486088871956
      }
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 117
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/max"
  input: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/RandomUniform"
  input: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform"
  op: "Add"
  input: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/mul"
  input: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel/Assign"
  op: "Assign"
  input: "v/cg/conv4/conv2d/kernel"
  input: "v/cg/conv4/conv2d/kernel/Initializer/random_uniform"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv4/conv2d/kernel/read"
  op: "Identity"
  input: "v/cg/conv4/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
}
node {
  name: "Cast_4"
  op: "Cast"
  input: "v/cg/conv4/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv4/conv2d/dilation_rate"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv4/conv2d/Conv2D"
  op: "Conv2D"
  input: "tower_0/v/cg/conv3/Relu"
  input: "Cast_4"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv4/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/conv4/biases"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/conv4/biases/Assign"
  op: "Assign"
  input: "v/cg/conv4/biases"
  input: "v/cg/conv4/biases/Initializer/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/conv4/biases/read"
  op: "Identity"
  input: "v/cg/conv4/biases"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/biases"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv4/Cast"
  op: "Cast"
  input: "v/cg/conv4/biases/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/conv4/BiasAdd"
  op: "BiasAdd"
  input: "tower_0/v/cg/conv4/conv2d/Conv2D"
  input: "tower_0/v/cg/conv4/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/cg/conv4/Reshape/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\r\000\000\000\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/conv4/Reshape"
  op: "Reshape"
  input: "tower_0/v/cg/conv4/BiasAdd"
  input: "tower_0/v/cg/conv4/Reshape/shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/cg/conv4/Relu"
  op: "Relu"
  input: "tower_0/v/cg/conv4/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/mpool2/MaxPool"
  op: "MaxPool"
  input: "tower_0/v/cg/conv4/Relu"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "tower_0/v/cg/Reshape/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000$\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/Reshape"
  op: "Reshape"
  input: "tower_0/v/cg/mpool2/MaxPool"
  input: "tower_0/v/cg/Reshape/shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "v/cg/affine0/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000$\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "v/cg/affine0/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/affine0/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.014731391333043575
      }
    }
  }
}
node {
  name: "v/cg/affine0/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "v/cg/affine0/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 142
    }
  }
}
node {
  name: "v/cg/affine0/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "v/cg/affine0/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "v/cg/affine0/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
}
node {
  name: "v/cg/affine0/weights/Initializer/truncated_normal"
  op: "Add"
  input: "v/cg/affine0/weights/Initializer/truncated_normal/mul"
  input: "v/cg/affine0/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
}
node {
  name: "v/cg/affine0/weights"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 9216
        }
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/affine0/weights/Assign"
  op: "Assign"
  input: "v/cg/affine0/weights"
  input: "v/cg/affine0/weights/Initializer/truncated_normal"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/affine0/weights/read"
  op: "Identity"
  input: "v/cg/affine0/weights"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/affine0/Cast"
  op: "Cast"
  input: "v/cg/affine0/weights/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/cg/affine0/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4096
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/affine0/biases"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/affine0/biases/Assign"
  op: "Assign"
  input: "v/cg/affine0/biases"
  input: "v/cg/affine0/biases/Initializer/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/affine0/biases/read"
  op: "Identity"
  input: "v/cg/affine0/biases"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/biases"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/affine0/Cast_1"
  op: "Cast"
  input: "v/cg/affine0/biases/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/affine0/xw_plus_b/MatMul"
  op: "MatMul"
  input: "tower_0/v/cg/Reshape"
  input: "tower_0/v/cg/affine0/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/cg/affine0/xw_plus_b"
  op: "BiasAdd"
  input: "tower_0/v/cg/affine0/xw_plus_b/MatMul"
  input: "tower_0/v/cg/affine0/Cast_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/cg/affine0/affine0"
  op: "Relu"
  input: "tower_0/v/cg/affine0/xw_plus_b"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/keep_prob"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_HALF
        tensor_shape {
        }
        half_val: 14336
      }
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/min"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_HALF
        tensor_shape {
        }
        half_val: 0
      }
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/max"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_HALF
        tensor_shape {
        }
        half_val: 15360
      }
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "tower_0/v/cg/dropout0/dropout/dropout/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 161
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/max"
  input: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/min"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/RandomUniform"
  input: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/sub"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform"
  op: "Add"
  input: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/mul"
  input: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform/min"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/add"
  op: "Add"
  input: "tower_0/v/cg/dropout0/dropout/dropout/keep_prob"
  input: "tower_0/v/cg/dropout0/dropout/dropout/random_uniform"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/Floor"
  op: "Floor"
  input: "tower_0/v/cg/dropout0/dropout/dropout/add"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/div"
  op: "RealDiv"
  input: "tower_0/v/cg/affine0/affine0"
  input: "tower_0/v/cg/dropout0/dropout/dropout/keep_prob"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0/dropout/dropout/mul"
  op: "Mul"
  input: "tower_0/v/cg/dropout0/dropout/dropout/div"
  input: "tower_0/v/cg/dropout0/dropout/dropout/Floor"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "v/cg/affine1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "v/cg/affine1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/affine1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.022097086533904076
      }
    }
  }
}
node {
  name: "v/cg/affine1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "v/cg/affine1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 172
    }
  }
}
node {
  name: "v/cg/affine1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "v/cg/affine1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "v/cg/affine1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
}
node {
  name: "v/cg/affine1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "v/cg/affine1/weights/Initializer/truncated_normal/mul"
  input: "v/cg/affine1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
}
node {
  name: "v/cg/affine1/weights"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/affine1/weights/Assign"
  op: "Assign"
  input: "v/cg/affine1/weights"
  input: "v/cg/affine1/weights/Initializer/truncated_normal"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/affine1/weights/read"
  op: "Identity"
  input: "v/cg/affine1/weights"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/affine1/Cast"
  op: "Cast"
  input: "v/cg/affine1/weights/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/cg/affine1/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4096
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/affine1/biases"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/affine1/biases/Assign"
  op: "Assign"
  input: "v/cg/affine1/biases"
  input: "v/cg/affine1/biases/Initializer/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/affine1/biases/read"
  op: "Identity"
  input: "v/cg/affine1/biases"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/biases"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/affine1/Cast_1"
  op: "Cast"
  input: "v/cg/affine1/biases/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/affine1/xw_plus_b/MatMul"
  op: "MatMul"
  input: "tower_0/v/cg/dropout0/dropout/dropout/mul"
  input: "tower_0/v/cg/affine1/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/cg/affine1/xw_plus_b"
  op: "BiasAdd"
  input: "tower_0/v/cg/affine1/xw_plus_b/MatMul"
  input: "tower_0/v/cg/affine1/Cast_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/cg/affine1/affine1"
  op: "Relu"
  input: "tower_0/v/cg/affine1/xw_plus_b"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/keep_prob"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_HALF
        tensor_shape {
        }
        half_val: 14336
      }
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/min"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_HALF
        tensor_shape {
        }
        half_val: 0
      }
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/max"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_HALF
        tensor_shape {
        }
        half_val: 15360
      }
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 191
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/max"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/min"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/RandomUniform"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/sub"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform"
  op: "Add"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/mul"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform/min"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/add"
  op: "Add"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/keep_prob"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/random_uniform"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/Floor"
  op: "Floor"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/add"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/div"
  op: "RealDiv"
  input: "tower_0/v/cg/affine1/affine1"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/keep_prob"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/cg/dropout0_1/dropout/dropout/mul"
  op: "Mul"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/div"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/Floor"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "v/cg/affine2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000\351\003\000\000"
      }
    }
  }
}
node {
  name: "v/cg/affine2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/affine2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.015625
      }
    }
  }
}
node {
  name: "v/cg/affine2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "v/cg/affine2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 123
    }
  }
  attr {
    key: "seed2"
    value {
      i: 202
    }
  }
}
node {
  name: "v/cg/affine2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "v/cg/affine2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "v/cg/affine2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
}
node {
  name: "v/cg/affine2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "v/cg/affine2/weights/Initializer/truncated_normal/mul"
  input: "v/cg/affine2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
}
node {
  name: "v/cg/affine2/weights"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 1001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/affine2/weights/Assign"
  op: "Assign"
  input: "v/cg/affine2/weights"
  input: "v/cg/affine2/weights/Initializer/truncated_normal"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/affine2/weights/read"
  op: "Identity"
  input: "v/cg/affine2/weights"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/affine2/Cast"
  op: "Cast"
  input: "v/cg/affine2/weights/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "v/cg/affine2/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1001
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "v/cg/affine2/biases"
  op: "VariableV2"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1001
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "v/cg/affine2/biases/Assign"
  op: "Assign"
  input: "v/cg/affine2/biases"
  input: "v/cg/affine2/biases/Initializer/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "v/cg/affine2/biases/read"
  op: "Identity"
  input: "v/cg/affine2/biases"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/biases"
      }
    }
  }
}
node {
  name: "tower_0/v/cg/affine2/Cast_1"
  op: "Cast"
  input: "v/cg/affine2/biases/read"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/cg/affine2/xw_plus_b/MatMul"
  op: "MatMul"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/mul"
  input: "tower_0/v/cg/affine2/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/cg/affine2/xw_plus_b"
  op: "BiasAdd"
  input: "tower_0/v/cg/affine2/xw_plus_b/MatMul"
  input: "tower_0/v/cg/affine2/Cast_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/Cast"
  op: "Cast"
  input: "tower_0/v/cg/affine2/xw_plus_b"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "tower_0/v/Cast"
  input: "tower_0/v/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  device: "/gpu:0"
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Const_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Const"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Const_2"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Const_2"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Greater/y"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Equal/y"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/ones_like/Shape"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/ones_like/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Equal"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/ones_like"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/num_present"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Select"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/zeros_like"
  op: "Const"
  input: "^tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/value"
  op: "Select"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/zeros_like"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/xentropy/Const"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/xentropy/xentropy_mean"
  op: "Mean"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/value"
  input: "tower_0/v/xentropy/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss"
  op: "L2Loss"
  input: "v/cg/conv0/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_1"
  op: "L2Loss"
  input: "v/cg/conv0/biases/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_2"
  op: "L2Loss"
  input: "v/cg/conv1/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_3"
  op: "L2Loss"
  input: "v/cg/conv1/biases/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_4"
  op: "L2Loss"
  input: "v/cg/conv2/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_5"
  op: "L2Loss"
  input: "v/cg/conv2/biases/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_6"
  op: "L2Loss"
  input: "v/cg/conv3/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_7"
  op: "L2Loss"
  input: "v/cg/conv3/biases/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_8"
  op: "L2Loss"
  input: "v/cg/conv4/conv2d/kernel/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_9"
  op: "L2Loss"
  input: "v/cg/conv4/biases/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_10"
  op: "L2Loss"
  input: "v/cg/affine0/weights/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_11"
  op: "L2Loss"
  input: "v/cg/affine0/biases/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_12"
  op: "L2Loss"
  input: "v/cg/affine1/weights/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_13"
  op: "L2Loss"
  input: "v/cg/affine1/biases/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_14"
  op: "L2Loss"
  input: "v/cg/affine2/weights/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/L2Loss_15"
  op: "L2Loss"
  input: "v/cg/affine2/biases/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/l2_loss/AddN"
  op: "AddN"
  input: "tower_0/v/l2_loss/L2Loss"
  input: "tower_0/v/l2_loss/L2Loss_1"
  input: "tower_0/v/l2_loss/L2Loss_2"
  input: "tower_0/v/l2_loss/L2Loss_3"
  input: "tower_0/v/l2_loss/L2Loss_4"
  input: "tower_0/v/l2_loss/L2Loss_5"
  input: "tower_0/v/l2_loss/L2Loss_6"
  input: "tower_0/v/l2_loss/L2Loss_7"
  input: "tower_0/v/l2_loss/L2Loss_8"
  input: "tower_0/v/l2_loss/L2Loss_9"
  input: "tower_0/v/l2_loss/L2Loss_10"
  input: "tower_0/v/l2_loss/L2Loss_11"
  input: "tower_0/v/l2_loss/L2Loss_12"
  input: "tower_0/v/l2_loss/L2Loss_13"
  input: "tower_0/v/l2_loss/L2Loss_14"
  input: "tower_0/v/l2_loss/L2Loss_15"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 16
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.9999998989515007e-05
      }
    }
  }
}
node {
  name: "tower_0/v/mul"
  op: "Mul"
  input: "tower_0/v/mul/x"
  input: "tower_0/v/l2_loss/AddN"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/add"
  op: "Add"
  input: "tower_0/v/xentropy/xentropy_mean"
  input: "tower_0/v/mul"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_1"
  op: "Mul"
  input: "tower_0/v/add"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/grad_ys_0"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/Fill"
  op: "Fill"
  input: "tower_0/v/gradients/Shape"
  input: "tower_0/v/gradients/grad_ys_0"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/mul_1_grad/Mul"
  op: "Mul"
  input: "tower_0/v/gradients/Fill"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/mul_1_grad/Mul_1"
  op: "Mul"
  input: "tower_0/v/gradients/Fill"
  input: "tower_0/v/add"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Reshape/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/mul_1_grad/Mul"
  input: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Reshape/shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Const"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Tile"
  op: "Tile"
  input: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Const_1"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/truediv"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Tile"
  input: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/Const_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/mul_grad/Mul"
  op: "Mul"
  input: "tower_0/v/gradients/tower_0/v/mul_1_grad/Mul"
  input: "tower_0/v/l2_loss/AddN"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  op: "Mul"
  input: "tower_0/v/gradients/tower_0/v/mul_1_grad/Mul"
  input: "tower_0/v/mul/x"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/truediv"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "tower_0/v/gradients/tower_0/v/xentropy/xentropy_mean_grad/truediv"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Select"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Sum"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Neg"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Select"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Select"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_2"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_grad/mul"
  op: "Mul"
  input: "v/cg/conv0/conv2d/kernel/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_1_grad/mul"
  op: "Mul"
  input: "v/cg/conv0/biases/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_2_grad/mul"
  op: "Mul"
  input: "v/cg/conv1/conv2d/kernel/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_3_grad/mul"
  op: "Mul"
  input: "v/cg/conv1/biases/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_4_grad/mul"
  op: "Mul"
  input: "v/cg/conv2/conv2d/kernel/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_5_grad/mul"
  op: "Mul"
  input: "v/cg/conv2/biases/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_6_grad/mul"
  op: "Mul"
  input: "v/cg/conv3/conv2d/kernel/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_7_grad/mul"
  op: "Mul"
  input: "v/cg/conv3/biases/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_8_grad/mul"
  op: "Mul"
  input: "v/cg/conv4/conv2d/kernel/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_9_grad/mul"
  op: "Mul"
  input: "v/cg/conv4/biases/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_10_grad/mul"
  op: "Mul"
  input: "v/cg/affine0/weights/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_11_grad/mul"
  op: "Mul"
  input: "v/cg/affine0/biases/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_12_grad/mul"
  op: "Mul"
  input: "v/cg/affine1/weights/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_13_grad/mul"
  op: "Mul"
  input: "v/cg/affine1/biases/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_14_grad/mul"
  op: "Mul"
  input: "v/cg/affine2/weights/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_15_grad/mul"
  op: "Mul"
  input: "v/cg/affine2/biases/read"
  input: "tower_0/v/gradients/tower_0/v/mul_grad/Mul_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_grad/Const"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_grad/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Const"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/zeros_like"
  op: "ZerosLike"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/xentropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine2/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower_0/v/gradients/tower_0/v/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine2/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "tower_0/v/gradients/tower_0/v/Cast_grad/Cast"
  input: "tower_0/v/cg/affine2/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine2/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/mul"
  input: "tower_0/v/gradients/tower_0/v/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine2/Cast_1_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/affine2/xw_plus_b_grad/BiasAddGrad"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Shape_1"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Shape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine2/xw_plus_b/MatMul_grad/MatMul"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/Floor"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Sum"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Mul"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/BroadcastGradientArgs"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/div"
  input: "tower_0/v/gradients/tower_0/v/cg/affine2/xw_plus_b/MatMul_grad/MatMul"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Mul_1"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/BroadcastGradientArgs:1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Sum_1"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine2/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/affine2/xw_plus_b/MatMul_grad/MatMul_1"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_15_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine2/Cast_1_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_15_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Shape_1"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Shape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Reshape"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/keep_prob"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Sum"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/RealDiv"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/BroadcastGradientArgs"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Neg"
  op: "Neg"
  input: "tower_0/v/cg/affine1/affine1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Neg"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/keep_prob"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/RealDiv_1"
  input: "tower_0/v/cg/dropout0_1/dropout/dropout/keep_prob"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/mul"
  op: "Mul"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/mul_grad/Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/RealDiv_2"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/BroadcastGradientArgs:1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Sum_1"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_1"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_14_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine2/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_14_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine1/affine1_grad/ReluGrad"
  op: "ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0_1/dropout/dropout/div_grad/Reshape"
  input: "tower_0/v/cg/affine1/affine1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine1/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/affine1/affine1_grad/ReluGrad"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine1/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine1/affine1_grad/ReluGrad"
  input: "tower_0/v/cg/affine1/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine1/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "tower_0/v/cg/dropout0/dropout/dropout/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine1/affine1_grad/ReluGrad"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine1/Cast_1_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/affine1/xw_plus_b_grad/BiasAddGrad"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Shape_1"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Shape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine1/xw_plus_b/MatMul_grad/MatMul"
  input: "tower_0/v/cg/dropout0/dropout/dropout/Floor"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Sum"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Mul"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/BroadcastGradientArgs"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "tower_0/v/cg/dropout0/dropout/dropout/div"
  input: "tower_0/v/gradients/tower_0/v/cg/affine1/xw_plus_b/MatMul_grad/MatMul"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Mul_1"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/BroadcastGradientArgs:1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Sum_1"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine1/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/affine1/xw_plus_b/MatMul_grad/MatMul_1"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_2"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_13_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine1/Cast_1_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_13_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\020\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Shape_1"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Shape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Reshape"
  input: "tower_0/v/cg/dropout0/dropout/dropout/keep_prob"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Sum"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/RealDiv"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/BroadcastGradientArgs"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Neg"
  op: "Neg"
  input: "tower_0/v/cg/affine0/affine0"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Neg"
  input: "tower_0/v/cg/dropout0/dropout/dropout/keep_prob"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/RealDiv_1"
  input: "tower_0/v/cg/dropout0/dropout/dropout/keep_prob"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/mul"
  op: "Mul"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/mul_grad/Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/RealDiv_2"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/BroadcastGradientArgs:1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Sum_1"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Shape_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_3"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_12_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine1/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_12_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine0/affine0_grad/ReluGrad"
  op: "ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/dropout0/dropout/dropout/div_grad/Reshape"
  input: "tower_0/v/cg/affine0/affine0"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine0/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/affine0/affine0_grad/ReluGrad"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine0/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine0/affine0_grad/ReluGrad"
  input: "tower_0/v/cg/affine0/Cast"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine0/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "tower_0/v/cg/Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/affine0/affine0_grad/ReluGrad"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine0/Cast_1_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/affine0/xw_plus_b_grad/BiasAddGrad"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/Reshape_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\006\000\000\000\006\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/Reshape_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/affine0/xw_plus_b/MatMul_grad/MatMul"
  input: "tower_0/v/gradients/tower_0/v/cg/Reshape_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/affine0/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/affine0/xw_plus_b/MatMul_grad/MatMul_1"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_4"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_11_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine0/Cast_1_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_11_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/mpool2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "tower_0/v/cg/conv4/Relu"
  input: "tower_0/v/cg/mpool2/MaxPool"
  input: "tower_0/v/gradients/tower_0/v/cg/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_5"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_10_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/affine0/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_10_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/mpool2/MaxPool_grad/MaxPoolGrad"
  input: "tower_0/v/cg/conv4/Relu"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv4/Reshape_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\r\000\000\000\r\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv4/Reshape_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/Relu_grad/ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/Reshape_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv4/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "tower_0/v/cg/conv3/Relu"
  input: "Cast_4"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv4/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/conv2d/Conv2D_grad/ShapeN"
  input: "Cast_4"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv4/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "tower_0/v/cg/conv3/Relu"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/conv2d/Conv2D_grad/ShapeN:1"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv4/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/BiasAdd_grad/BiasAddGrad"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "tower_0/v/cg/conv3/Relu"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/Cast_4_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_6"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_9_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/conv4/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_9_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv3/Reshape_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\r\000\000\000\r\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv3/Reshape_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/Relu_grad/ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/Reshape_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_7"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_8_grad/mul"
  input: "tower_0/v/gradients/Cast_4_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_8_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv3/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "tower_0/v/cg/conv2/Relu"
  input: "Cast_3"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv3/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/conv2d/Conv2D_grad/ShapeN"
  input: "Cast_3"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv3/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "tower_0/v/cg/conv2/Relu"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/conv2d/Conv2D_grad/ShapeN:1"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv3/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/BiasAdd_grad/BiasAddGrad"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/conv2d/Conv2D_grad/Conv2DBackpropInput"
  input: "tower_0/v/cg/conv2/Relu"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/Cast_3_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_8"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_7_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/conv3/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_7_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv2/Reshape_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\r\000\000\000\r\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv2/Reshape_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/Relu_grad/ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/Reshape_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_9"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_6_grad/mul"
  input: "tower_0/v/gradients/Cast_3_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_6_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv2/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "tower_0/v/cg/mpool1/MaxPool"
  input: "Cast_2"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv2/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/conv2d/Conv2D_grad/ShapeN"
  input: "Cast_2"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv2/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "tower_0/v/cg/mpool1/MaxPool"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/conv2d/Conv2D_grad/ShapeN:1"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv2/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/BiasAdd_grad/BiasAddGrad"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/mpool1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "tower_0/v/cg/conv1/Relu"
  input: "tower_0/v/cg/mpool1/MaxPool"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/conv2d/Conv2D_grad/Conv2DBackpropInput"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/Cast_2_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_10"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_5_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/conv2/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_5_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/mpool1/MaxPool_grad/MaxPoolGrad"
  input: "tower_0/v/cg/conv1/Relu"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_11"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_4_grad/mul"
  input: "tower_0/v/gradients/Cast_2_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_4_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv1/Reshape_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000\033\000\000\000\033\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/Relu_grad/ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/Reshape_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv1/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "tower_0/v/cg/mpool0/MaxPool"
  input: "Cast_1"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv1/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/conv2d/Conv2D_grad/ShapeN"
  input: "Cast_1"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "tower_0/v/cg/mpool0/MaxPool"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/conv2d/Conv2D_grad/ShapeN:1"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv1/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/BiasAdd_grad/BiasAddGrad"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/mpool0/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "tower_0/v/cg/conv0/Relu"
  input: "tower_0/v/cg/mpool0/MaxPool"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/conv2d/Conv2D_grad/Conv2DBackpropInput"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/Cast_1_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_12"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_3_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/conv1/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_3_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv0/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/mpool0/MaxPool_grad/MaxPoolGrad"
  input: "tower_0/v/cg/conv0/Relu"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_13"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_2_grad/mul"
  input: "tower_0/v/gradients/Cast_1_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_2_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv0/Reshape_grad/Shape"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\0007\000\000\0007\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv0/Reshape_grad/Reshape"
  op: "Reshape"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/Relu_grad/ReluGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/Reshape_grad/Shape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv0/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv0/conv2d/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "tower_0/v/gpu_cached_inputs/read"
  input: "Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv0/conv2d/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/conv2d/Conv2D_grad/ShapeN"
  input: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv0/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "tower_0/v/gpu_cached_inputs/read"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/conv2d/Conv2D_grad/ShapeN:1"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/Reshape_grad/Reshape"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_HALF
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 4
        i: 4
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "tower_0/v/gradients/tower_0/v/cg/conv0/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/BiasAdd_grad/BiasAddGrad"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/Cast_grad/Cast"
  op: "Cast"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/conv2d/Conv2D_grad/Conv2DBackpropFilter"
  device: "/gpu:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_14"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_1_grad/mul"
  input: "tower_0/v/gradients/tower_0/v/cg/conv0/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_1_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/gradients/AddN_15"
  op: "AddN"
  input: "tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_grad/mul"
  input: "tower_0/v/gradients/Cast_grad/Cast"
  device: "/gpu:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gradients/tower_0/v/l2_loss/L2Loss_grad/mul"
      }
    }
  }
}
node {
  name: "tower_0/v/truediv/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv"
  op: "RealDiv"
  input: "tower_0/v/truediv/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_2"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_15"
  input: "tower_0/v/truediv"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_1/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_1"
  op: "RealDiv"
  input: "tower_0/v/truediv_1/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_3"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_14"
  input: "tower_0/v/truediv_1"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_2/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_2"
  op: "RealDiv"
  input: "tower_0/v/truediv_2/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_4"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_13"
  input: "tower_0/v/truediv_2"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_3/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_3"
  op: "RealDiv"
  input: "tower_0/v/truediv_3/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_5"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_12"
  input: "tower_0/v/truediv_3"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_4/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_4"
  op: "RealDiv"
  input: "tower_0/v/truediv_4/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_6"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_11"
  input: "tower_0/v/truediv_4"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_5/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_5"
  op: "RealDiv"
  input: "tower_0/v/truediv_5/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_7"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_10"
  input: "tower_0/v/truediv_5"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_6/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_6"
  op: "RealDiv"
  input: "tower_0/v/truediv_6/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_8"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_9"
  input: "tower_0/v/truediv_6"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_7/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_7"
  op: "RealDiv"
  input: "tower_0/v/truediv_7/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_9"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_8"
  input: "tower_0/v/truediv_7"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_8/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_8"
  op: "RealDiv"
  input: "tower_0/v/truediv_8/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_10"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_7"
  input: "tower_0/v/truediv_8"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_9/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_9"
  op: "RealDiv"
  input: "tower_0/v/truediv_9/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_11"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_6"
  input: "tower_0/v/truediv_9"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_10/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_10"
  op: "RealDiv"
  input: "tower_0/v/truediv_10/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_12"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_5"
  input: "tower_0/v/truediv_10"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_11/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_11"
  op: "RealDiv"
  input: "tower_0/v/truediv_11/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_13"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_4"
  input: "tower_0/v/truediv_11"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_12/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_12"
  op: "RealDiv"
  input: "tower_0/v/truediv_12/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_14"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_3"
  input: "tower_0/v/truediv_12"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_13/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_13"
  op: "RealDiv"
  input: "tower_0/v/truediv_13/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_15"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_2"
  input: "tower_0/v/truediv_13"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_14/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_14"
  op: "RealDiv"
  input: "tower_0/v/truediv_14/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_16"
  op: "Mul"
  input: "tower_0/v/gradients/AddN_1"
  input: "tower_0/v/truediv_14"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/truediv_15/x"
  op: "Const"
  device: "/gpu:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower_0/v/truediv_15"
  op: "RealDiv"
  input: "tower_0/v/truediv_15/x"
  input: "loss_scale/read"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "tower_0/v/mul_17"
  op: "Mul"
  input: "tower_0/v/gradients/AddN"
  input: "tower_0/v/truediv_15"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gpu_compute_stage_ops_group"
  op: "NoOp"
}
node {
  name: "average_loss/Rank/packed"
  op: "Pack"
  input: "tower_0/v/add"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "average_loss/Rank"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "average_loss/range/start"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "average_loss/range/delta"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "average_loss/range"
  op: "Range"
  input: "average_loss/range/start"
  input: "average_loss/Rank"
  input: "average_loss/range/delta"
  device: "/device:GPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "average_loss/Mean/input"
  op: "Pack"
  input: "tower_0/v/add"
  device: "/device:GPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "average_loss/Mean"
  op: "Mean"
  input: "average_loss/Mean/input"
  input: "average_loss/range"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "learning_rate_tensor/input"
  op: "Const"
  device: "/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.004999999888241291
      }
    }
  }
}
node {
  name: "learning_rate_tensor"
  op: "Identity"
  input: "learning_rate_tensor/input"
  device: "/device:GPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv0/conv2d/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv0/conv2d/kernel"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_2"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv0/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv0/biases"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_3"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv1/conv2d/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv1/conv2d/kernel"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_4"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv1/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv1/biases"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_5"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv2/conv2d/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv2/conv2d/kernel"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_6"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv2/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv2/biases"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_7"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv3/conv2d/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv3/conv2d/kernel"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_8"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv3/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv3/biases"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_9"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv4/conv2d/kernel/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv4/conv2d/kernel"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_10"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/conv4/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/conv4/biases"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_11"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/affine0/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/affine0/weights"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_12"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/affine0/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/affine0/biases"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_13"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/affine1/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/affine1/weights"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_14"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/affine1/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/affine1/biases"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_15"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/affine2/weights/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/affine2/weights"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_16"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent/update_v/cg/affine2/biases/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "v/cg/affine2/biases"
  input: "learning_rate_tensor"
  input: "tower_0/v/mul_17"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "append_apply_gradient_ops/GradientDescent"
  op: "NoOp"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/affine0/biases/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/affine0/weights/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/affine1/biases/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/affine1/weights/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/affine2/biases/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/affine2/weights/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv0/biases/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv0/conv2d/kernel/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv1/biases/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv1/conv2d/kernel/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv2/biases/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv2/conv2d/kernel/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv3/biases/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv3/conv2d/kernel/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv4/biases/ApplyGradientDescent"
  input: "^append_apply_gradient_ops/GradientDescent/update_v/cg/conv4/conv2d/kernel/ApplyGradientDescent"
  device: "/device:GPU:0"
}
node {
  name: "train_ops_group"
  op: "NoOp"
  input: "^append_apply_gradient_ops/GradientDescent"
  device: "/device:GPU:0"
}
node {
  name: "main_fetch_group/NoOp"
  op: "NoOp"
  input: "^gpu_compute_stage_ops_group"
}
node {
  name: "main_fetch_group/NoOp_1"
  op: "NoOp"
  input: "^average_loss/Mean"
  input: "^train_ops_group"
  device: "/device:GPU:0"
}
node {
  name: "main_fetch_group"
  op: "NoOp"
  input: "^main_fetch_group/NoOp"
  input: "^main_fetch_group/NoOp_1"
}
node {
  name: "inc_global_step/AssignAdd/value"
  op: "Const"
  input: "^main_fetch_group"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "inc_global_step/AssignAdd"
  op: "AssignAdd"
  input: "global_step"
  input: "inc_global_step/AssignAdd/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "local_variable_initialization/init"
  op: "NoOp"
  input: "^tower_0/v/gpu_cached_inputs/Assign"
  device: "/device:GPU:0"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "local_var_init_op_group/NoOp"
  op: "NoOp"
  input: "^init_all_tables"
}
node {
  name: "local_var_init_op_group/NoOp_1"
  op: "NoOp"
  input: "^local_variable_initialization/init"
  device: "/device:GPU:0"
}
node {
  name: "local_var_init_op_group"
  op: "NoOp"
  input: "^local_var_init_op_group/NoOp"
  input: "^local_var_init_op_group/NoOp_1"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 18
          }
        }
        string_val: "global_step"
        string_val: "loss_scale"
        string_val: "v/cg/affine0/biases"
        string_val: "v/cg/affine0/weights"
        string_val: "v/cg/affine1/biases"
        string_val: "v/cg/affine1/weights"
        string_val: "v/cg/affine2/biases"
        string_val: "v/cg/affine2/weights"
        string_val: "v/cg/conv0/biases"
        string_val: "v/cg/conv0/conv2d/kernel"
        string_val: "v/cg/conv1/biases"
        string_val: "v/cg/conv1/conv2d/kernel"
        string_val: "v/cg/conv2/biases"
        string_val: "v/cg/conv2/conv2d/kernel"
        string_val: "v/cg/conv3/biases"
        string_val: "v/cg/conv3/conv2d/kernel"
        string_val: "v/cg/conv4/biases"
        string_val: "v/cg/conv4/conv2d/kernel"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 18
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "loss_scale"
  input: "v/cg/affine0/biases"
  input: "v/cg/affine0/weights"
  input: "v/cg/affine1/biases"
  input: "v/cg/affine1/weights"
  input: "v/cg/affine2/biases"
  input: "v/cg/affine2/weights"
  input: "v/cg/conv0/biases"
  input: "v/cg/conv0/conv2d/kernel"
  input: "v/cg/conv1/biases"
  input: "v/cg/conv1/conv2d/kernel"
  input: "v/cg/conv2/biases"
  input: "v/cg/conv2/conv2d/kernel"
  input: "v/cg/conv3/biases"
  input: "v/cg/conv3/conv2d/kernel"
  input: "v/cg/conv4/biases"
  input: "v/cg/conv4/conv2d/kernel"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 18
          }
        }
        string_val: "global_step"
        string_val: "loss_scale"
        string_val: "v/cg/affine0/biases"
        string_val: "v/cg/affine0/weights"
        string_val: "v/cg/affine1/biases"
        string_val: "v/cg/affine1/weights"
        string_val: "v/cg/affine2/biases"
        string_val: "v/cg/affine2/weights"
        string_val: "v/cg/conv0/biases"
        string_val: "v/cg/conv0/conv2d/kernel"
        string_val: "v/cg/conv1/biases"
        string_val: "v/cg/conv1/conv2d/kernel"
        string_val: "v/cg/conv2/biases"
        string_val: "v/cg/conv2/conv2d/kernel"
        string_val: "v/cg/conv3/biases"
        string_val: "v/cg/conv3/conv2d/kernel"
        string_val: "v/cg/conv4/biases"
        string_val: "v/cg/conv4/conv2d/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 18
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "loss_scale"
  input: "save/RestoreV2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_scale"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "v/cg/affine0/biases"
  input: "save/RestoreV2:2"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "v/cg/affine0/weights"
  input: "save/RestoreV2:3"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "v/cg/affine1/biases"
  input: "save/RestoreV2:4"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "v/cg/affine1/weights"
  input: "save/RestoreV2:5"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "v/cg/affine2/biases"
  input: "save/RestoreV2:6"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "v/cg/affine2/weights"
  input: "save/RestoreV2:7"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "v/cg/conv0/biases"
  input: "save/RestoreV2:8"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "v/cg/conv0/conv2d/kernel"
  input: "save/RestoreV2:9"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "v/cg/conv1/biases"
  input: "save/RestoreV2:10"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "v/cg/conv1/conv2d/kernel"
  input: "save/RestoreV2:11"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "v/cg/conv2/biases"
  input: "save/RestoreV2:12"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "v/cg/conv2/conv2d/kernel"
  input: "save/RestoreV2:13"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "v/cg/conv3/biases"
  input: "save/RestoreV2:14"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "v/cg/conv3/conv2d/kernel"
  input: "save/RestoreV2:15"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "v/cg/conv4/biases"
  input: "save/RestoreV2:16"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "v/cg/conv4/conv2d/kernel"
  input: "save/RestoreV2:17"
  device: "/gpu:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  device: "/device:GPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "loss_scale"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss_scale"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "v/cg/conv0/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "v/cg/conv0/biases"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv0/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "v/cg/conv1/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "v/cg/conv1/biases"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "v/cg/conv2/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "v/cg/conv2/biases"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "v/cg/conv3/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "v/cg/conv3/biases"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv3/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "v/cg/conv4/conv2d/kernel"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/conv2d/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "v/cg/conv4/biases"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/conv4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "v/cg/affine0/weights"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "v/cg/affine0/biases"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine0/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "v/cg/affine1/weights"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "v/cg/affine1/biases"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "v/cg/affine2/weights"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "v/cg/affine2/biases"
  device: "/gpu:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@v/cg/affine2/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "tower_0/v/gpu_cached_inputs"
  device: "/device:GPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower_0/v/gpu_cached_inputs"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_HALF
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 19
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 19
          }
        }
        string_val: "global_step"
        string_val: "loss_scale"
        string_val: "v/cg/conv0/conv2d/kernel"
        string_val: "v/cg/conv0/biases"
        string_val: "v/cg/conv1/conv2d/kernel"
        string_val: "v/cg/conv1/biases"
        string_val: "v/cg/conv2/conv2d/kernel"
        string_val: "v/cg/conv2/biases"
        string_val: "v/cg/conv3/conv2d/kernel"
        string_val: "v/cg/conv3/biases"
        string_val: "v/cg/conv4/conv2d/kernel"
        string_val: "v/cg/conv4/biases"
        string_val: "v/cg/affine0/weights"
        string_val: "v/cg/affine0/biases"
        string_val: "v/cg/affine1/weights"
        string_val: "v/cg/affine1/biases"
        string_val: "v/cg/affine2/weights"
        string_val: "v/cg/affine2/biases"
        string_val: "tower_0/v/gpu_cached_inputs"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 19
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^loss_scale/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^v/cg/affine0/biases/Assign"
  input: "^v/cg/affine0/weights/Assign"
  input: "^v/cg/affine1/biases/Assign"
  input: "^v/cg/affine1/weights/Assign"
  input: "^v/cg/affine2/biases/Assign"
  input: "^v/cg/affine2/weights/Assign"
  input: "^v/cg/conv0/biases/Assign"
  input: "^v/cg/conv0/conv2d/kernel/Assign"
  input: "^v/cg/conv1/biases/Assign"
  input: "^v/cg/conv1/conv2d/kernel/Assign"
  input: "^v/cg/conv2/biases/Assign"
  input: "^v/cg/conv2/conv2d/kernel/Assign"
  input: "^v/cg/conv3/biases/Assign"
  input: "^v/cg/conv3/conv2d/kernel/Assign"
  input: "^v/cg/conv4/biases/Assign"
  input: "^v/cg/conv4/conv2d/kernel/Assign"
  device: "/device:GPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
versions {
  producer: 26
}
